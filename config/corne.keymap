/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_fr.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        Gaming {
            bindings = <&to 3>;
            key-positions = <37 41>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        WinRight {
            bindings = <&WinRight>;
            key-positions = <36 20>;
        };

        WinLeft {
            bindings = <&WinLeft>;
            key-positions = <36 19>;
        };
    };

    macros {
        VSC_Search: VSC_Search {
            compatible = "zmk,behavior-macro";
            label = "VSC_SEARCH";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp P>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
        VSC_Cmd_Srch: VSC_Cmd_Srch {
            compatible = "zmk,behavior-macro";
            label = "VSC_CMD_SRCH";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp P>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
        WinRight: WinRight {
            compatible = "zmk,behavior-macro";
            label = "WINRIGHT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };
        WinLeft: WinLeft {
            compatible = "zmk,behavior-macro";
            label = "WINLEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_WIN>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LEFT_WIN>;
        };
        e_circonflexe: e_circonflexe {
            compatible = "zmk,behavior-macro";
            label = "E_CIRCONFLEXE";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp FR_CARET>,
                <&macro_press>,
                <&kp FR_E>;
        };
    };

    behaviors {
        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings =
                <&mo>,
                <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        hold_sticky: hold_sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_STICKY";
            bindings =
                <&kp>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        e_circonflexe_behav: e_circonflexe_behav {
            compatible = "zmk,behavior-hold-tap";
            label = "E_CIRCONFLEXE_BEHAV";
            bindings =
                <&e_circonflexe>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
         &kp TAB  &mt FR_A_GRAVE FR_A  &kp FR_Z  &mt FR_E_ACUTE FR_E    &mt FR_E_GRAVE FR_R       &e_circonflexe_behav 0 FR_T         &kp FR_Y  &mt FR_U_GRAVE FR_U      &kp FR_I          &kp FR_O      &kp FR_P      &mt DELETE ESC
  &kp LEFT_SHIFT             &kp FR_Q  &kp FR_S             &kp FR_D               &kp FR_F                          &kp FR_G         &kp FR_H             &kp FR_J      &kp FR_K          &kp FR_L      &kp FR_M           &kp ENTER
&kp LEFT_CONTROL             &kp FR_W  &kp FR_X                &none  &mt FR_C_CEDILLA FR_C                          &kp FR_V         &kp FR_B             &kp FR_N  &kp FR_COMMA  &kp FR_SEMICOLON  &kp FR_COLON  &kp FR_EXCLAMATION
                                                            &kp LGUI            &mo_tog 1 1  &hold_sticky LEFT_ALT LEFT_SHIFT    &kp BACKSPACE            &kp SPACE   &mo_tog 2 2
            >;
        };

        Num+Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none            &none    &kp FR_DEGREE  &mt FR_EURO FR_DOLLAR      &kp FR_HASH                    &kp FR_PERCENT        &mt FR_GREATER_THAN FR_LESS_THAN                &kp FR_EXCLAMATION                              &kp FR_AMPERSAND                        &kp FR_AT_SIGN       &mt FR_PLUS FR_ASTRK         &kp BACKSLASH
&none  &kp KP_NUMBER_1  &kp KP_NUMBER_2        &kp KP_NUMBER_3  &kp KP_NUMBER_4                   &kp KP_NUMBER_5                  &mt FR_PERIOD FR_EQUAL  &mt FR_RIGHT_BRACE FR_LEFT_BRACE  &mt FR_RIGHT_PARENTHESIS FR_LEFT_PARENTHESIS  &mt FR_RIGHT_BRACKET FR_LEFT_BRACKET  &mt FR_SEMICOLON FR_COMMA  &mt FR_PIPE FR_SLASH
&none  &kp KP_NUMBER_6  &kp KP_NUMBER_7        &kp KP_NUMBER_8  &kp KP_NUMBER_9                   &kp KP_NUMBER_0    &mt FR_SINGLE_QUOTE FR_DOUBLE_QUOTES        &mt FR_UNDERSCORE FR_MINUS                                  &kp FR_COLON                          &kp FR_TILDE               &kp FR_CARET          &kp FR_GRAVE
                                                      &kp LGUI            &to 0  &hold_sticky LEFT_ALT LEFT_SHIFT                           &kp BACKSPACE                         &kp SPACE                                   &mo_tog 2 2
            >;
        };

        FKey+Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
    &out OUT_TOG      &kp F1        &kp F2        &kp F3        &kp F4            &kp F5              &kp F6             &kp F7          &kp F8            &kp F9      &kp F11        &kp F12
  &kp LEFT_SHIFT  &kp C_PREV    &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY_PAUSE               &none  &mt END PAGE_DOWN    &kp UP_ARROW  &mt HOME PAGE_UP  &VSC_Search  &VSC_Cmd_Srch
&kp LEFT_CONTROL  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3               &none     &kp LEFT_ARROW  &kp DOWN_ARROW   &kp RIGHT_ARROW        &none          &none
                                                &kp LGUI   &mo_tog 1 1    &kp LEFT_SHIFT    &kp LEFT_CONTROL      &kp BACKSPACE           &to 0
            >;
        };

        Gaming {
            bindings = <
         &kp TAB  &kp FR_N1  &kp FR_N2     &kp FR_N3     &kp FR_N4  &kp FR_N5    &kp FR_N6  &kp FR_N7  &kp FR_N8  &kp FR_N9  &kp FR_N0  &kp ESCAPE
  &kp LEFT_SHIFT   &kp FR_A   &kp FR_Z      &kp FR_E      &kp FR_R   &kp FR_T     &kp FR_Y   &kp FR_U   &kp FR_I   &kp FR_O   &kp FR_P       &none
&kp LEFT_CONTROL   &kp FR_Q   &kp FR_S      &kp FR_D      &kp FR_F   &kp FR_G     &kp FR_H   &kp FR_J   &kp FR_K   &kp FR_L   &kp FR_M       &none
                                        &lt 0 ESCAPE  &kp LEFT_ALT  &kp SPACE        &none      &none      &none
            >;
        };
    };
};
